#!/usr/bin/env python
# -*- coding:utf-8 -*-
# author:dell
# datetime:2020/2/13 18:57

enable_registers_new_addr = True  # 是否启用新的register map参数
hidden_register_map = False  # 是否隐藏register map控制功能

# 输出BOM list 版本可控制，V6610测试版V0.1对应的版本号为1.0
BOM_version = 1.0

OTP_burn_model_for_VA6610 = 1  # OTP load/burn 模式选择，1为VA6610, 2为VA6610D
OTP_burn_model_for_VA6610D = 2
registers_load_burn_mode = OTP_burn_model_for_VA6610

# 增加map后寄存器地址新旧对应表
map_old_addr2new_addr = {0x10: 0x02, 0x11: 0x22, 0x12: 0x12, 0x13: 0x32, 0x14: 0x06, 0x15: 0x26, 0x16: 0x16, 0x17: 0x36,
                         0x20: 0x01, 0x21: 0x21, 0x30: 0x03, 0x31: 0x23, 0x32: 0x13, 0x33: 0x33, 0x34: 0x07, 0x35: 0x27,
                         0x3d: 0x2f, 0x3e: 0x1f, 0x3f: 0x3f}
if enable_registers_new_addr:
    map_row2addr = {0: 0x02, 1: 0x22, 2: 0x12, 3: 0x32, 4: 0x06, 5: 0x26, 6: 0x16, 7: 0x36, 8: 0x01, 9: 0x21, 10: 0x03,
                    11: 0x23, 12: 0x13, 13: 0x33, 14: 0x07, 15: 0x27, 16: 0x2f, 17: 0x1f, 18: 0x3f}
    map_addr2row = {0x02: 0, 0x22: 1, 0x12: 2, 0x32: 3, 0x06: 4, 0x26: 5, 0x16: 6, 0x36: 7,
                    0x01: 8, 0x21: 9, 0x03: 10, 0x23: 11, 0x13: 12, 0x33: 13, 0x07: 14, 0x27: 15,
                    0x2f: 16, 0x1f: 18, 0x3f: 18}
else:
    map_row2addr = {0: 16, 1: 17, 2: 18, 3: 19, 4: 20, 5: 21, 6: 22, 7: 23, 8: 32, 9: 33, 10: 48, 11: 49, 12: 50,
                    13: 51, 14: 52, 15: 53, 16: 61, 17: 62, 18: 63}
    map_addr2row = {0x10: 0, 0x11: 1, 0x12: 2, 0x13: 3, 0x14: 4, 0x15: 5, 0x16: 6, 0x17: 7,
                    0x20: 8, 0x21: 9, 0x30: 10, 0x31: 11, 0x32: 12, 0x33: 13, 0x34: 14, 0x35: 15,
                    0x3d: 16, 0x3e: 17, 0x3f: 18}


i2c_addr_bit_num = 8

# registers 地址映射选择
if enable_registers_new_addr:  # 新版register地址映射
    if i2c_addr_bit_num == 7:
        i2c_addr = 0x4d
        i2c_addr_slave = 0x4c
    elif i2c_addr_bit_num == 8:
        i2c_addr = 0x9a
        i2c_addr_slave = 0x98
    power_addr = 0x01
    burn_register = 0x3e
    register_addrs_list = [0x02, 0x22, 0x12, 0x32,
                           0x06, 0x26, 0x16, 0x36, power_addr,
                           0x21, 0x03, 0x23, 0x13, 0x33,
                           0x07, 0x27, 0x2f, 0x1f, 0x3f]
else:  # 旧版register地址映射
    if i2c_addr_bit_num == 7:
        i2c_addr = 0x47
        i2c_addr_slave = 0x46
    elif i2c_addr_bit_num == 8:
        i2c_addr = 0x8e
        i2c_addr_slave = 0x8c
    power_addr = 0x20
    burn_register = 0x1f
    register_addrs_list = [0x10, 0x11, 0x12, 0x13,
                           0x14, 0x15, 0x16, 0x17, power_addr,
                           0x21, 0x30, 0x31, 0x32, 0x33,
                           0x34, 0x35, 0x3d, 0x3e, 0x3f]